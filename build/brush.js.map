{"version":3,"sources":["webpack:///brush.js","webpack:///webpack/bootstrap 2b98535b8457dfa9cfbd?2165","webpack:///./src/util/create-map.js?5a60","webpack:///./src/lib/color-selector.js","webpack:///./src/lib/raster/color-texture.js","webpack:///./src/lib/raster/value-map.js","webpack:///./src/brush.js","webpack:///./~/d3/build/d3.js","webpack:///./~/lodash.range/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","onLoad","container","document","createElement","classList","add","body","appendChild","mapboxgl","accessToken","map","Map","center","zoom","style","renderWorldCopies","maxBounds","on","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","onSelect","onBrushEnd","selection","d3","event","_selection$map$map","x","domain","val","width","Math","floor","_selection$map$map2","min","max","svgEle","createElementNS","svg","select","attr","height","scaleBand","rangeRound","y","scaleLinear","g","append","data","_lodash2","barWidth","selectAll","enter","brush","brushX","extent","move","range","_d2","obj","newObj","key","_lodash","createTextureContext","arguments","canvas","context","getContext","create","valueMap","colorFunction","valueIsValid","fillStyle","fillRect","getImageData","updateOpacity","texture","opacity","index","r","b","a","newAlpha","_interopRequireDefault","_toConsumableArray","arr2","from","_classCallCheck","instance","Constructor","createValueMap","round","_createClass","defineProperties","target","props","descriptor","writable","protoProps","staticProps","_createMap","_createMap2","_colorSelector","_colorSelector2","_colorTexture","colorTexture","_valueMap","_valueMap2","TempDisplay","this","element","querySelector","textContent","addSource","type","tiles","scheme","tileSize","minzoom","maxzoom","addLayer","id","source","paint","raster-lookup-texture","tempDisplay","console","log","filterMap","layer","getLayer","setGradientTexture","resize","update","global","factory","ascendingComparator","f","ascending","pair","tickIncrement","start","stop","count","step","power","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","scale","offset","bandwidth","entering","__axis","axis","orient","values","tickValues","ticks","apply","tickArguments","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","path","tick","order","tickExit","exit","tickEnter","line","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","indexOf","set","callback","noop","concat","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","rgbConvert","rgb","h","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","local$$1","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","map$1","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","define","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","baseRange","fromRight","nativeMax","nativeCeil","isIndex","MAX_SAFE_INTEGER","reIsUint","isIterateeCall","isObject","isArrayLike","eq","isLength","isFunction","tag","objectToString","funcTag","genTag","isObjectLike","isSymbol","symbolTag","toFinite","toNumber","INFINITY","MAX_INTEGER","NAN","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","objectProto"],"mappings":"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","file":"brush.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (onLoad) {\n  var container = document.createElement('div');\n  container.classList.add('map', 'container');\n\n  document.body.appendChild(container);\n\n  mapboxgl.accessToken = 'pk.eyJ1Ijoic2NhcnlzaXplIiwiYSI6ImNpcjR2ZWs4ODAwNDZoc25xMmRzM2JlcnQifQ.XmRVjMqDm9jUWw3eMYrrUw';\n\n  var map = new mapboxgl.Map({\n    container: container,\n    center: [0, 0],\n    zoom: 0,\n    style: 'mapbox://styles/scarysize/cj318x12u00002qnqcawqy98r',\n    renderWorldCopies: false,\n    maxBounds: [[-180, -85], [180, 85]]\n  });\n\n  map.on('load', function () {\n    return onLoad(map);\n  });\n};\n\n/***/ }),\n/* 1 */,\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = function (onSelect) {\n  document.body.classList.add('brush');\n\n  var svgEle = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  document.body.appendChild(svgEle);\n\n  var svg = d3.select('svg').attr('width', 765).attr('height', 100);\n  var width = svg.attr('width');\n  var height = svg.attr('height');\n  var x = d3.scaleBand().rangeRound([0, 255]);\n  var y = d3.scaleLinear().rangeRound([0, height]);\n  var g = svg.append('g');\n  var data = (0, _lodash2.default)(0, 255);\n\n  x.domain((0, _lodash2.default)(0, 255));\n  y.domain([0, 1]);\n\n  function onBrushEnd() {\n    var selection = d3.event.selection;\n    var bands = x.domain();\n\n    var _selection$map$map = selection.map(function (val) {\n      return val / width * 255;\n    }).map(Math.floor),\n        _selection$map$map2 = _slicedToArray(_selection$map$map, 2),\n        min = _selection$map$map2[0],\n        max = _selection$map$map2[1];\n\n    onSelect(min, max);\n  }\n\n  var barWidth = width / data.length;\n\n  g.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', function (d, i) {\n    return i * barWidth;\n  }).attr('y', function (d) {\n    return 1;\n  }).attr('fill', function (d) {\n    return 'rgba(' + d + ',' + d + ',' + d + ',1)';\n  }).attr('width', function () {\n    return barWidth;\n  }).attr('height', function (d) {\n    return height;\n  });\n\n  var brush = d3.brushX().extent([[0, 1], [width, height - 1]]).on('brush end', onBrushEnd);\n\n  svg.append('g').call(brush).call(brush.move, x.range());\n};\n\nvar _d2 = __webpack_require__(15);\n\nvar d3 = _interopRequireWildcard(_d2);\n\nvar _lodash = __webpack_require__(16);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.updateOpacity = updateOpacity;\n/**\n * Helper to create the texture canvas context.\n * @param  {number} [width=256]  The width of the canvas\n * @param  {number} [height=1]  The height of the canvas\n * @return {CanvasRenderingContext2D}  The canvas 2d context\n */\nfunction createTextureContext() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 256;\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  return context;\n}\n\n/**\n * Creates a color mapping texture for a given color function.\n * @param  {Array} valueMap An array with a maximum of 256 value entries\n * @param  {Function} colorFunction The color mapping function.\n *   This function should return a valid color string for every passed value.\n * @return {ImageData} An image object\n */\nfunction create(valueMap) {\n  var colorFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return 'transparent';\n  };\n\n  var width = 256; // number of possible pixel color values\n  var height = 1;\n  var context = createTextureContext();\n\n  for (var i = 0; i < width; i++) {\n    var value = valueMap[i];\n    var valueIsValid = value !== undefined && value !== null; // eslint-disable-line no-undefined, max-len\n\n    context.fillStyle = valueIsValid ? colorFunction(value) : 'transparent';\n    context.fillRect(i, 0, 1, height);\n  }\n\n  return context.getImageData(0, 0, width, height);\n}\n\n/**\n * Updates the opacity of the color mapping texture.\n * @param  {ImageData} texture  The texture to update\n * @param  {number} opacity  The new opacity value\n * @return {ImageData}  The updated texture\n */\nfunction updateOpacity(texture, opacity) {\n  var width = texture.width;\n  var height = texture.height;\n  var data = texture.data;\n  var context = createTextureContext();\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      // index into the color array\n      var index = (x + y * width) * 4;\n\n      // look-up colors\n      var r = data[index];\n      var g = data[index + 1];\n      var b = data[index + 2];\n      var a = data[index + 3];\n\n      // recalculate alpha value\n      var newAlpha = a / 255 * opacity;\n\n      // redraw with updated alpha value\n      context.fillStyle = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + newAlpha + ')';\n      context.fillRect(x, y, 1, 1);\n    }\n  }\n\n  return context.getImageData(0, 0, width, height);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = [-50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49];\n\n/***/ }),\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _createMap = __webpack_require__(0);\n\nvar _createMap2 = _interopRequireDefault(_createMap);\n\nvar _colorSelector = __webpack_require__(2);\n\nvar _colorSelector2 = _interopRequireDefault(_colorSelector);\n\nvar _colorTexture = __webpack_require__(5);\n\nvar colorTexture = _interopRequireWildcard(_colorTexture);\n\nvar _valueMap = __webpack_require__(6);\n\nvar _valueMap2 = _interopRequireDefault(_valueMap);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TempDisplay = function () {\n  function TempDisplay() {\n    _classCallCheck(this, TempDisplay);\n\n    this.element = document.createElement('div');\n\n    this.element.classList.add('temp-display');\n    document.querySelector('.container').appendChild(this.element);\n  }\n\n  _createClass(TempDisplay, [{\n    key: 'update',\n    value: function update(min, max) {\n      this.element.textContent = min + '\\xB0C - ' + max + '\\xB0C';\n    }\n  }]);\n\n  return TempDisplay;\n}();\n\nfunction createValueMap(min, max) {\n  var map = [].concat(_toConsumableArray(_valueMap2.default));\n\n  for (var i = 0; i < 256; i++) {\n    if (i <= min || i >= max) {\n      map[i] = 0;\n    }\n  }\n\n  return map;\n}\n\nfunction colorFunction(value) {\n  if (value === 0) return 'transparent';\n\n  var scaled = Math.round((value + 50) / 100 * 360);\n\n  return 'hsla(' + (360 - scaled) + ', 100%, 50%, 1)';\n}\n\n(0, _createMap2.default)(function (map) {\n  var texture = colorTexture.create(createValueMap(0, 255), colorFunction);\n  map.addSource('raster-source', {\n    type: 'data-driven-raster',\n    tiles: ['https://storage.googleapis.com/storage.ubidev.net/meteogroup/dWU5OHd6Zmg4NzI5cmZjMDh6/tiles/temperature-data/18/{z}/{x}/{y}.png'],\n    scheme: 'tms',\n    tileSize: 256,\n    minzoom: 0,\n    maxzoom: 4\n  });\n  map.addLayer({\n    id: 'layer',\n    source: 'raster-source',\n    type: 'data-driven-raster',\n    paint: { 'raster-lookup-texture': texture }\n  });\n  var tempDisplay = new TempDisplay();\n\n  (0, _colorSelector2.default)(function (min, max) {\n    console.log(_valueMap2.default.length);\n    console.log(_valueMap2.default[min], _valueMap2.default[max]);\n    var filterMap = createValueMap(min, max);\n    var texture = colorTexture.create(filterMap, colorFunction);\n    var layer = map.getLayer('layer');\n    if (!layer) return;\n\n    layer.setGradientTexture(texture);\n    map.resize();\n    tempDisplay.update(_valueMap2.default[min], _valueMap2.default[max]);\n  });\n});\n\n/***/ }),\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// brush.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b98535b8457dfa9cfbd","export default function(onLoad) {\n  const container = document.createElement('div');\n  container.classList.add('map', 'container');\n\n  document.body.appendChild(container);\n\n  mapboxgl.accessToken =\n    'pk.eyJ1Ijoic2NhcnlzaXplIiwiYSI6ImNpcjR2ZWs4ODAwNDZoc25xMmRzM2JlcnQifQ.XmRVjMqDm9jUWw3eMYrrUw';\n\n  const map = new mapboxgl.Map({\n    container,\n    center: [0, 0],\n    zoom: 0,\n    style: 'mapbox://styles/scarysize/cj318x12u00002qnqcawqy98r',\n    renderWorldCopies: false,\n    maxBounds: [[-180, -85], [180, 85]]\n  });\n\n  map.on('load', () => onLoad(map));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/create-map.js","import * as d3 from 'd3';\nimport range from 'lodash.range';\n\nexport default function(onSelect) {\n  document.body.classList.add('brush');\n\n  const svgEle = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  document.body.appendChild(svgEle);\n\n  const svg = d3.select('svg').attr('width', 765).attr('height', 100);\n  const width = svg.attr('width');\n  const height = svg.attr('height');\n  const x = d3.scaleBand().rangeRound([0, 255]);\n  const y = d3.scaleLinear().rangeRound([0, height]);\n  const g = svg.append('g');\n  const data = range(0, 255);\n\n  x.domain(range(0, 255));\n  y.domain([0, 1]);\n\n  function onBrushEnd() {\n    const selection = d3.event.selection;\n    const bands = x.domain();\n    const [min, max] = selection.map(val => val / width * 255).map(Math.floor);\n    onSelect(min, max);\n  }\n\n  const barWidth = width / data.length;\n\n  g\n    .selectAll('.bar')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('class', 'bar')\n    .attr('x', (d, i) => {\n      return i * barWidth;\n    })\n    .attr('y', d => 1)\n    .attr('fill', d => `rgba(${d},${d},${d},1)`)\n    .attr('width', () => barWidth)\n    .attr('height', function(d) {\n      return height;\n    });\n\n  const brush = d3\n    .brushX()\n    .extent([[0, 1], [width, height - 1]])\n    .on('brush end', onBrushEnd);\n\n  svg.append('g').call(brush).call(brush.move, x.range());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/color-selector.js","/**\n * Helper to create the texture canvas context.\n * @param  {number} [width=256]  The width of the canvas\n * @param  {number} [height=1]  The height of the canvas\n * @return {CanvasRenderingContext2D}  The canvas 2d context\n */\nfunction createTextureContext(width = 256, height = 1) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  return context;\n}\n\n/**\n * Creates a color mapping texture for a given color function.\n * @param  {Array} valueMap An array with a maximum of 256 value entries\n * @param  {Function} colorFunction The color mapping function.\n *   This function should return a valid color string for every passed value.\n * @return {ImageData} An image object\n */\nexport function create(valueMap, colorFunction = () => 'transparent') {\n  const width = 256; // number of possible pixel color values\n  const height = 1;\n  const context = createTextureContext();\n\n  for (let i = 0; i < width; i++) {\n    const value = valueMap[i];\n    const valueIsValid = value !== undefined && value !== null; // eslint-disable-line no-undefined, max-len\n\n    context.fillStyle = valueIsValid ? colorFunction(value) : 'transparent';\n    context.fillRect(i, 0, 1, height);\n  }\n\n  return context.getImageData(0, 0, width, height);\n}\n\n/**\n * Updates the opacity of the color mapping texture.\n * @param  {ImageData} texture  The texture to update\n * @param  {number} opacity  The new opacity value\n * @return {ImageData}  The updated texture\n */\nexport function updateOpacity(texture, opacity) {\n  const width = texture.width;\n  const height = texture.height;\n  const data = texture.data;\n  const context = createTextureContext();\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      // index into the color array\n      const index = (x + y * width) * 4;\n\n      // look-up colors\n      const r = data[index];\n      const g = data[index + 1];\n      const b = data[index + 2];\n      const a = data[index + 3];\n\n      // recalculate alpha value\n      const newAlpha = a / 255 * opacity;\n\n      // redraw with updated alpha value\n      context.fillStyle = `rgba(${r}, ${g}, ${b}, ${newAlpha})`;\n      context.fillRect(x, y, 1, 1);\n    }\n  }\n\n  return context.getImageData(0, 0, width, height);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/raster/color-texture.js","export default [\n  -50,\n  -49,\n  -48,\n  -47,\n  -46,\n  -45,\n  -44,\n  -43,\n  -42,\n  -41,\n  -40,\n  -39,\n  -38,\n  -37,\n  -36,\n  -35,\n  -34,\n  -33,\n  -32,\n  -31,\n  -30,\n  -29,\n  -28,\n  -27,\n  -26,\n  -25,\n  -24,\n  -23,\n  -22,\n  -21,\n  -20,\n  -19,\n  -18,\n  -17,\n  -16,\n  -15,\n  -14,\n  -13,\n  -12,\n  -11,\n  -10,\n  -9,\n  -8,\n  -7,\n  -6,\n  -5,\n  -4,\n  -3,\n  -2,\n  -1,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/raster/value-map.js","import createMap from './util/create-map';\nimport colorSelector from './lib/color-selector';\nimport * as colorTexture from './lib/raster/color-texture';\nimport valueMap from './lib/raster/value-map';\n\nclass TempDisplay {\n  constructor() {\n    this.element = document.createElement('div');\n\n    this.element.classList.add('temp-display');\n    document.querySelector('.container').appendChild(this.element);\n  }\n\n  update(min, max) {\n    this.element.textContent = `${min}°C - ${max}°C`;\n  }\n}\n\nfunction createValueMap(min, max) {\n  const map = [...valueMap];\n\n  for (let i = 0; i < 256; i++) {\n    if (i <= min || i >= max) {\n      map[i] = 0;\n    }\n  }\n\n  return map;\n}\n\nfunction colorFunction(value) {\n  if (value === 0) return 'transparent';\n\n  const scaled = Math.round((value + 50) / 100 * 360);\n\n  return `hsla(${360 - scaled}, 100%, 50%, 1)`;\n}\n\ncreateMap(map => {\n  const texture = colorTexture.create(createValueMap(0, 255), colorFunction);\n  map.addSource('raster-source', {\n    type: 'data-driven-raster',\n    tiles: [\n      'https://storage.googleapis.com/storage.ubidev.net/meteogroup/dWU5OHd6Zmg4NzI5cmZjMDh6/tiles/temperature-data/18/{z}/{x}/{y}.png'\n    ],\n    scheme: 'tms',\n    tileSize: 256,\n    minzoom: 0,\n    maxzoom: 4\n  });\n  map.addLayer({\n    id: 'layer',\n    source: 'raster-source',\n    type: 'data-driven-raster',\n    paint: {'raster-lookup-texture': texture}\n  });\n  const tempDisplay = new TempDisplay();\n\n  colorSelector((min, max) => {\n    console.log(valueMap.length);\n    console.log(valueMap[min], valueMap[max]);\n    const filterMap = createValueMap(min, max);\n    const texture = colorTexture.create(filterMap, colorFunction);\n    const layer = map.getLayer('layer');\n    if (!layer) return;\n\n    layer.setGradientTexture(texture);\n    map.resize();\n    tempDisplay.update(valueMap[min], valueMap[max]);\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/brush.js","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 15\n// module chunks = 1","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.range/index.js\n// module id = 16\n// module chunks = 1"],"sourceRoot":""}